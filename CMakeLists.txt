project (WebPhonon)
cmake_minimum_required(VERSION 2.6)
find_package(Qt4 REQUIRED)
find_package(OpenGL)
if( NOT WIN32)
find_package(KDE4 REQUIRED)
include (KDE4Defaults)
include_directories(${QT_INCLUDES} ${CMAKE_CURRENT_BINARY_DIR} ${KDE4_INCLUDES})
message(STATUS "Build system is not Windows/win32")
ADD_SUBDIRECTORY(icons)
else(NOT WIN32)
message(STATUS "Build system is Windows/win32")
include_directories(${QT_INCLUDES} ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR} ${PHONON_INCLUDE_DIR} ${QT_INCULDE_DIR})
endif(NOT WIN32)

INCLUDE(${QT_USE_FILE})
ADD_DEFINITIONS(${QT_DEFINITIONS})
SET(WebPhonon_SOURCES main.cpp mainwindow.cpp dialog.cpp backenddialog.cpp helpdialog.cpp dbmainwindow.cpp dropwidget.cpp aboutdialog.cpp addmoviedialog.cpp tablelistdialog.cpp addtvdialog.cpp visualizer.cpp addmusicdialog.cpp addmvdialog.cpp )
SET(WebPhonon_HEADERS mainwindow.h dialog.h backenddialog.h helpdialog.h dbmainwindow.h dropwidget.h aboutdialog.h addmoviedialog.h tablelistdialog.h addtvdialog.h addmusicdialog.h addmvdialog.h visualizer.h)
SET(WebPhonon_FORMS mainwindow.ui dialog.ui backenddialog.ui helpdialog.ui dbmainwindow.ui aboutdialog.ui addmoviedialog.ui tablelistdialog.ui addtvdialog.ui addmusicdialog.ui addmvdialog.ui)
SET(WebPhonon_RESOURCES Icons.qrc)
SET(WebPhonon_SPLASH WebPhonon-Master-text2.png)

#set(CMAKE_AUTOMOC ON)
#set(WebPhononSources icons/hi16-app-WebPhonon.png icons/hi32-app-WebPhonon.png icons/hi48-app-WebPhonon.png icons/hi64-app-WebPhonon.png icons/hi128-app-WebPhonon.png icons/hi256-app-WebPhonon.png icons/hi512-app-WebPhonon.png)
qt4_automoc(${WebPhonon_SOURCES})
QT4_WRAP_CPP(WebPhonon_HEADERS_MOC ${WebPhonon_HEADERS})
QT4_WRAP_UI(WebPhonon_FORMS_HEADERS ${WebPhonon_FORMS})
QT4_ADD_RESOURCES(WebPhonon_RESOURCES_RCC ${WebPhonon_RESOURCES})

#kde4_add_app_icon(WebPhononSources "icons/hi*-apps-WebPhonon.png")

add_executable(WebPhonon ${WebPhonon_SOURCES} ${WebPhonon_HEADERS_MOC} ${WebPhonon_FORMS_HEADERS} ${WebPhonon_RESOURCES_RCC})
if(NOT WIN32)
target_link_libraries(WebPhonon ${QT_LIBRARIES} ${QT_QTCORE_LIBRARY} ${QT_QTNETWORK_LIBRARY} ${QT_QTSQL_LIBRARY} ${QT_QTGUI_LIBRARY} ${KDE4_KDEUI_LIBS} ${PHONON_LIBS} ${KDE4_PHONON_LIBS} ${KDE4_KDECORE_LIBS} ${QT_QTOPENGL_LIBRARY} ${OPENGL_gl_LIBRARY})
install(TARGETS WebPhonon ${INSTALL_TARGETS_DEFAULT_ARGS})
INSTALL(FILES ${WebPhonon_SPLASH} DESTINATION share/WebPhonon/splash)
else(NOT WIN32)
TARGET_LINK_LIBRARIES(WebPhonon ${QT_LIBRARIES} ${QT_QTCORE_LIBRARY} ${QT_QTSQL_LIBRARY} ${QT_QTNETWORK_LIBRARY} ${QT_QTGUI_LIBRARY} ${QT_PHONON_LIBRARY} ${QT_QTOPENGL_LIBRARY} ${OPENGL_gl_LIBRARY})
install (TARGETS WebPhonon DESTINATION bin)
INSTALL(FILES C:/Qt/4.8.5/bin/QtCore4.dll DESTINATION bin )
INSTALL(FILES C:/Qt/4.8.5/bin/QtGui4.dll DESTINATION bin )
INSTALL(FILES C:/Qt/4.8.5/bin/phonon4.dll DESTINATION bin )
INSTALL(FILES C:/Qt/4.8.5/bin/QtSql4.dll DESTINATION bin )
INSTALL(FILES C:/Qt/4.8.5/bin/QtNetwork4.dll DESTINATION bin )
#INSTALL(FILES C:/Qt/4.8.5/bin/QtWebkit4.dll DESTINATION bin )
INSTALL(FILES C:/Qt/4.8.5/bin/libmysql.dll DESTINATION bin )
INSTALL(DIRECTORY C:/Qt/4.8.5/plugins/phonon_backend DESTINATION bin )
INSTALL(DIRECTORY C:/Qt/4.8.5/plugins/sqldrivers DESTINATION bin )
# build a CPack driven installer package
#include (InstallRequiredSystemLibraries)
set(CPACK_PACKAGE_VERSION ${VERSION})
set(CPACK_GENERATOR "NSIS")
set(CPACK_PACKAGE_NAME "WebPhonon")
set(CPACK_PACKAGE_RELEASE 1)
set(CPACK_PACKAGE_CONTACT "aaron.zakhrov@gmail.com")
set(CPACK_PACKAGE_VENDOR "Aaron Zakhrov")
include (CPack)
endif(NOT WIN32)
#INSTALL( PROGRAMS WebPhonon.desktop DESTINATION ${XDG_APPS_INSTALL_DIR} )
#INSTALL(FILES ${WebPhononSources} DESTINATION ${DATA_INSTALL_DIR}/WebPhonon)
